<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="snake.basic.GrowthTests" tests="2" skipped="0" failures="2" errors="0" timestamp="2023-09-13T16:13:00" hostname="dhcp-134-158.th.vu.nl" time="0.075">
  <properties/>
  <testcase name="testGrow" classname="snake.basic.GrowthTests" time="0.038">
    <failure message="org.scalatest.exceptions.TestFailedException: didPass was false&#10;Hint: After eating the apple, the snake should grow by one cell per step, for three steps. This&#10;means that the tail should not be shortened for three steps. The new food should be placed as soon&#10;as the previous food is eaten. The snake should grow after eating the apple, it should not&#10;already have grown in the frame where the head of the snake eats the apple (and a new apple is&#10;placed).&#10;--------------------------------------------------------------------------------&#10;This is what went wrong:&#10;&#10;step=0, rand=1, actions=&lt;&gt;&#10;Want       | Got ✓     &#10;-----------------------&#10;OO&gt;.A..... | OO&gt;.A.....&#10;.......... | ..........&#10;&#10;step=1, rand=1, actions=&lt;Step&gt;&#10;Want       | Got ✓     &#10;-----------------------&#10;.OO&gt;A..... | .OO&gt;A.....&#10;.......... | ..........&#10;&#10;step=2, rand=10, actions=&lt;Step&gt;&#10;Want       | Got ✗     &#10;-----------------------&#10;..OO&gt;..... | .AOO&gt;.....&#10;...A...... | ..........&#10;&#10;step=3, rand=10, actions=&lt;Step&gt;&#10;Want       | Got ✗     &#10;-----------------------&#10;..OOO&gt;.... | .AOOO&gt;....&#10;...A...... | ..........&#10;&#10;step=4, rand=10, actions=&lt;Step&gt;&#10;Want       | Got ✗     &#10;-----------------------&#10;..OOOO&gt;... | .AOOOO&gt;...&#10;...A...... | ..........&#10;&#10;step=5, rand=10, actions=&lt;Step&gt;&#10;Want       | Got ✗     &#10;-----------------------&#10;..OOOOO&gt;.. | .AOOOOO&gt;..&#10;...A...... | ..........&#10;&#10;step=6, rand=10, actions=&lt;Step&gt;&#10;Want       | Got ✗     &#10;-----------------------&#10;...OOOOO&gt;. | .A.OOOOO&gt;.&#10;...A...... | ..........&#10;&#10;step=7, rand=10, actions=&lt;Step&gt;&#10;Want       | Got ✗     &#10;-----------------------&#10;....OOOOO&gt; | .A..OOOOO&gt;&#10;...A...... | ..........&#10;&#10;" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: didPass was false
Hint: After eating the apple, the snake should grow by one cell per step, for three steps. This
means that the tail should not be shortened for three steps. The new food should be placed as soon
as the previous food is eaten. The snake should grow after eating the apple, it should not
already have grown in the frame where the head of the snake eats the apple (and a new apple is
placed).
--------------------------------------------------------------------------------
This is what went wrong:

step=0, rand=1, actions=&lt;&gt;
Want       | Got ✓     
-----------------------
OO&gt;.A..... | OO&gt;.A.....
.......... | ..........

step=1, rand=1, actions=&lt;Step&gt;
Want       | Got ✓     
-----------------------
.OO&gt;A..... | .OO&gt;A.....
.......... | ..........

step=2, rand=10, actions=&lt;Step&gt;
Want       | Got ✗     
-----------------------
..OO&gt;..... | .AOO&gt;.....
...A...... | ..........

step=3, rand=10, actions=&lt;Step&gt;
Want       | Got ✗     
-----------------------
..OOO&gt;.... | .AOOO&gt;....
...A...... | ..........

step=4, rand=10, actions=&lt;Step&gt;
Want       | Got ✗     
-----------------------
..OOOO&gt;... | .AOOOO&gt;...
...A...... | ..........

step=5, rand=10, actions=&lt;Step&gt;
Want       | Got ✗     
-----------------------
..OOOOO&gt;.. | .AOOOOO&gt;..
...A...... | ..........

step=6, rand=10, actions=&lt;Step&gt;
Want       | Got ✗     
-----------------------
...OOOOO&gt;. | .A.OOOOO&gt;.
...A...... | ..........

step=7, rand=10, actions=&lt;Step&gt;
Want       | Got ✗     
-----------------------
....OOOOO&gt; | .A..OOOOO&gt;
...A...... | ..........


	at app//org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:530)
	at app//org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:529)
	at app//org.scalatest.FunSuite.newAssertionFailedException(FunSuite.scala:1560)
	at app//org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:503)
	at app//generic.GameTestSuite.checkGame(GameTestSuite.scala:298)
	at app//snake.SnakeTestSuiteBase.checkGame(SnakeTestSuiteBase.scala:102)
	at app//snake.basic.GrowthTests.$anonfun$new$1(GrowthTests.scala:36)
	at app//scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at app//infrastructure.TestBase.$anonfun$test$1(TestBase.scala:36)
	at app//org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at app//org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at app//org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at app//org.scalatest.Transformer.apply(Transformer.scala:22)
	at app//org.scalatest.Transformer.apply(Transformer.scala:20)
	at app//org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at app//org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at app//org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at app//infrastructure.TestBase.org$scalatest$concurrent$TimeLimitedTests$$super$withFixture(TestBase.scala:9)
	at app//org.scalatest.concurrent.TimeLimitedTests.$anonfun$withFixture$3(TimeLimitedTests.scala:154)
	at app//org.scalatest.enablers.Timed$$anon$1.timeoutAfter(Timed.scala:127)
	at app//org.scalatest.concurrent.TimeLimits.failAfterImpl(TimeLimits.scala:239)
	at app//org.scalatest.concurrent.TimeLimits.failAfterImpl$(TimeLimits.scala:233)
	at app//org.scalatest.concurrent.TimeLimits$.failAfterImpl(TimeLimits.scala:305)
	at app//org.scalatest.concurrent.TimeLimitedTests.withFixture(TimeLimitedTests.scala:153)
	at app//org.scalatest.concurrent.TimeLimitedTests.withFixture$(TimeLimitedTests.scala:150)
	at app//infrastructure.TestBase.withFixture(TestBase.scala:9)
	at app//org.scalatest.FunSuiteLike.invokeWithFixture$1(FunSuiteLike.scala:184)
	at app//org.scalatest.FunSuiteLike.$anonfun$runTest$1(FunSuiteLike.scala:196)
	at app//org.scalatest.SuperEngine.runTestImpl(Engine.scala:286)
	at app//org.scalatest.FunSuiteLike.runTest(FunSuiteLike.scala:196)
	at app//org.scalatest.FunSuiteLike.runTest$(FunSuiteLike.scala:178)
	at app//org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at app//org.scalatest.FunSuiteLike.$anonfun$runTests$1(FunSuiteLike.scala:229)
	at app//org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:393)
	at app//scala.collection.immutable.List.foreach(List.scala:333)
	at app//org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at app//org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:376)
	at app//org.scalatest.SuperEngine.runTestsImpl(Engine.scala:458)
	at app//org.scalatest.FunSuiteLike.runTests(FunSuiteLike.scala:229)
	at app//org.scalatest.FunSuiteLike.runTests$(FunSuiteLike.scala:228)
	at app//org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at app//org.scalatest.Suite.run(Suite.scala:1124)
	at app//org.scalatest.Suite.run$(Suite.scala:1106)
	at app//org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at app//org.scalatest.FunSuiteLike.$anonfun$run$1(FunSuiteLike.scala:233)
	at app//org.scalatest.SuperEngine.runImpl(Engine.scala:518)
	at app//org.scalatest.FunSuiteLike.run(FunSuiteLike.scala:233)
	at app//org.scalatest.FunSuiteLike.run$(FunSuiteLike.scala:232)
	at app//infrastructure.TestBase.run(TestBase.scala:26)
	at app//org.scalatest.Suite.callExecuteOnSuite$1(Suite.scala:1187)
	at app//org.scalatest.Suite.$anonfun$runNestedSuites$1(Suite.scala:1234)
	at app//scala.collection.ArrayOps$.foreach$extension(ArrayOps.scala:1323)
	at app//org.scalatest.Suite.runNestedSuites(Suite.scala:1232)
	at app//org.scalatest.Suite.runNestedSuites$(Suite.scala:1166)
	at app//org.scalatest.Suites.runNestedSuites(Suites.scala:56)
	at app//org.scalatest.Suite.run(Suite.scala:1121)
	at app//org.scalatest.Suite.run$(Suite.scala:1106)
	at app//snake.SnakeTestSuite.runDirect(SnakeTestSuite.scala:24)
	at app//snake.SnakeTestSuite.run(SnakeTestSuite.scala:16)
	at app//org.scalatestplus.junit.JUnitRunner.run(JUnitRunner.scala:99)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base@18.0.2.1/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base@18.0.2.1/java.lang.reflect.Method.invoke(Method.java:577)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:176)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
</failure>
  </testcase>
  <testcase name="testGrowTwice" classname="snake.basic.GrowthTests" time="0.036">
    <failure message="org.scalatest.exceptions.TestFailedException: didPass was false&#10;Hint: If a new apple is eaten before the snake has fully grown from the last apple, the effect is&#10;stacked.&#10;--------------------------------------------------------------------------------&#10;This is what went wrong:&#10;&#10;step=0, rand=0, actions=&lt;&gt;&#10;Want           | Got ✓         &#10;-------------------------------&#10;OO&gt;A.......... | OO&gt;A..........&#10;.............. | ..............&#10;&#10;step=1, rand=2, actions=&lt;Step&gt;&#10;Want           | Got ✗         &#10;-------------------------------&#10;.OO&gt;.A........ | OOA&gt;..........&#10;.............. | ..............&#10;&#10;step=2, rand=2, actions=&lt;Step&gt;&#10;Want           | Got ✗         &#10;-------------------------------&#10;.OOO&gt;A........ | OOAO&gt;.........&#10;.............. | ..............&#10;&#10;step=3, rand=10, actions=&lt;Step&gt;&#10;Want           | Got ✗         &#10;-------------------------------&#10;.OOOO&gt;........ | OOAOO&gt;........&#10;.A............ | ..............&#10;&#10;step=4, rand=10, actions=&lt;Step&gt;&#10;Want           | Got ✗         &#10;-------------------------------&#10;.OOOOO&gt;....... | .OAOOO&gt;.......&#10;.A............ | ..............&#10;&#10;step=5, rand=10, actions=&lt;Step&gt;&#10;Want           | Got ✗         &#10;-------------------------------&#10;.OOOOOO&gt;...... | ..AOOOO&gt;......&#10;.A............ | ..............&#10;&#10;step=6, rand=10, actions=&lt;Step&gt;&#10;Want           | Got ✗         &#10;-------------------------------&#10;.OOOOOOO&gt;..... | ..AOOOOO&gt;.....&#10;.A............ | ..............&#10;&#10;step=7, rand=10, actions=&lt;Step&gt;&#10;Want           | Got ✗         &#10;-------------------------------&#10;.OOOOOOOO&gt;.... | ..A.OOOOO&gt;....&#10;.A............ | ..............&#10;&#10;step=8, rand=10, actions=&lt;Step&gt;&#10;Want           | Got ✗         &#10;-------------------------------&#10;..OOOOOOOO&gt;... | ..A..OOOOO&gt;...&#10;.A............ | ..............&#10;&#10;step=9, rand=10, actions=&lt;Step&gt;&#10;Want           | Got ✗         &#10;-------------------------------&#10;...OOOOOOOO&gt;.. | ..A...OOOOO&gt;..&#10;.A............ | ..............&#10;&#10;step=10, rand=10, actions=&lt;Step&gt;&#10;Want           | Got ✗         &#10;-------------------------------&#10;....OOOOOOOO&gt;. | ..A....OOOOO&gt;.&#10;.A............ | ..............&#10;&#10;" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: didPass was false
Hint: If a new apple is eaten before the snake has fully grown from the last apple, the effect is
stacked.
--------------------------------------------------------------------------------
This is what went wrong:

step=0, rand=0, actions=&lt;&gt;
Want           | Got ✓         
-------------------------------
OO&gt;A.......... | OO&gt;A..........
.............. | ..............

step=1, rand=2, actions=&lt;Step&gt;
Want           | Got ✗         
-------------------------------
.OO&gt;.A........ | OOA&gt;..........
.............. | ..............

step=2, rand=2, actions=&lt;Step&gt;
Want           | Got ✗         
-------------------------------
.OOO&gt;A........ | OOAO&gt;.........
.............. | ..............

step=3, rand=10, actions=&lt;Step&gt;
Want           | Got ✗         
-------------------------------
.OOOO&gt;........ | OOAOO&gt;........
.A............ | ..............

step=4, rand=10, actions=&lt;Step&gt;
Want           | Got ✗         
-------------------------------
.OOOOO&gt;....... | .OAOOO&gt;.......
.A............ | ..............

step=5, rand=10, actions=&lt;Step&gt;
Want           | Got ✗         
-------------------------------
.OOOOOO&gt;...... | ..AOOOO&gt;......
.A............ | ..............

step=6, rand=10, actions=&lt;Step&gt;
Want           | Got ✗         
-------------------------------
.OOOOOOO&gt;..... | ..AOOOOO&gt;.....
.A............ | ..............

step=7, rand=10, actions=&lt;Step&gt;
Want           | Got ✗         
-------------------------------
.OOOOOOOO&gt;.... | ..A.OOOOO&gt;....
.A............ | ..............

step=8, rand=10, actions=&lt;Step&gt;
Want           | Got ✗         
-------------------------------
..OOOOOOOO&gt;... | ..A..OOOOO&gt;...
.A............ | ..............

step=9, rand=10, actions=&lt;Step&gt;
Want           | Got ✗         
-------------------------------
...OOOOOOOO&gt;.. | ..A...OOOOO&gt;..
.A............ | ..............

step=10, rand=10, actions=&lt;Step&gt;
Want           | Got ✗         
-------------------------------
....OOOOOOOO&gt;. | ..A....OOOOO&gt;.
.A............ | ..............


	at app//org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:530)
	at app//org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:529)
	at app//org.scalatest.FunSuite.newAssertionFailedException(FunSuite.scala:1560)
	at app//org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:503)
	at app//generic.GameTestSuite.checkGame(GameTestSuite.scala:298)
	at app//snake.SnakeTestSuiteBase.checkGame(SnakeTestSuiteBase.scala:102)
	at app//snake.basic.GrowthTests.$anonfun$new$2(GrowthTests.scala:77)
	at app//scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at app//infrastructure.TestBase.$anonfun$test$1(TestBase.scala:36)
	at app//org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at app//org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at app//org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at app//org.scalatest.Transformer.apply(Transformer.scala:22)
	at app//org.scalatest.Transformer.apply(Transformer.scala:20)
	at app//org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at app//org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at app//org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at app//infrastructure.TestBase.org$scalatest$concurrent$TimeLimitedTests$$super$withFixture(TestBase.scala:9)
	at app//org.scalatest.concurrent.TimeLimitedTests.$anonfun$withFixture$3(TimeLimitedTests.scala:154)
	at app//org.scalatest.enablers.Timed$$anon$1.timeoutAfter(Timed.scala:127)
	at app//org.scalatest.concurrent.TimeLimits.failAfterImpl(TimeLimits.scala:239)
	at app//org.scalatest.concurrent.TimeLimits.failAfterImpl$(TimeLimits.scala:233)
	at app//org.scalatest.concurrent.TimeLimits$.failAfterImpl(TimeLimits.scala:305)
	at app//org.scalatest.concurrent.TimeLimitedTests.withFixture(TimeLimitedTests.scala:153)
	at app//org.scalatest.concurrent.TimeLimitedTests.withFixture$(TimeLimitedTests.scala:150)
	at app//infrastructure.TestBase.withFixture(TestBase.scala:9)
	at app//org.scalatest.FunSuiteLike.invokeWithFixture$1(FunSuiteLike.scala:184)
	at app//org.scalatest.FunSuiteLike.$anonfun$runTest$1(FunSuiteLike.scala:196)
	at app//org.scalatest.SuperEngine.runTestImpl(Engine.scala:286)
	at app//org.scalatest.FunSuiteLike.runTest(FunSuiteLike.scala:196)
	at app//org.scalatest.FunSuiteLike.runTest$(FunSuiteLike.scala:178)
	at app//org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at app//org.scalatest.FunSuiteLike.$anonfun$runTests$1(FunSuiteLike.scala:229)
	at app//org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:393)
	at app//scala.collection.immutable.List.foreach(List.scala:333)
	at app//org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at app//org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:376)
	at app//org.scalatest.SuperEngine.runTestsImpl(Engine.scala:458)
	at app//org.scalatest.FunSuiteLike.runTests(FunSuiteLike.scala:229)
	at app//org.scalatest.FunSuiteLike.runTests$(FunSuiteLike.scala:228)
	at app//org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at app//org.scalatest.Suite.run(Suite.scala:1124)
	at app//org.scalatest.Suite.run$(Suite.scala:1106)
	at app//org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at app//org.scalatest.FunSuiteLike.$anonfun$run$1(FunSuiteLike.scala:233)
	at app//org.scalatest.SuperEngine.runImpl(Engine.scala:518)
	at app//org.scalatest.FunSuiteLike.run(FunSuiteLike.scala:233)
	at app//org.scalatest.FunSuiteLike.run$(FunSuiteLike.scala:232)
	at app//infrastructure.TestBase.run(TestBase.scala:26)
	at app//org.scalatest.Suite.callExecuteOnSuite$1(Suite.scala:1187)
	at app//org.scalatest.Suite.$anonfun$runNestedSuites$1(Suite.scala:1234)
	at app//scala.collection.ArrayOps$.foreach$extension(ArrayOps.scala:1323)
	at app//org.scalatest.Suite.runNestedSuites(Suite.scala:1232)
	at app//org.scalatest.Suite.runNestedSuites$(Suite.scala:1166)
	at app//org.scalatest.Suites.runNestedSuites(Suites.scala:56)
	at app//org.scalatest.Suite.run(Suite.scala:1121)
	at app//org.scalatest.Suite.run$(Suite.scala:1106)
	at app//snake.SnakeTestSuite.runDirect(SnakeTestSuite.scala:24)
	at app//snake.SnakeTestSuite.run(SnakeTestSuite.scala:16)
	at app//org.scalatestplus.junit.JUnitRunner.run(JUnitRunner.scala:99)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base@18.0.2.1/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base@18.0.2.1/java.lang.reflect.Method.invoke(Method.java:577)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:176)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
</failure>
  </testcase>
  <system-out><![CDATA[The apple location is Point(4,0)
The apple location is Point(4,0)
The apple location is Point(1,0)
The apple location is Point(1,0)
The apple location is Point(1,0)
The apple location is Point(1,0)
The apple location is Point(1,0)
The apple location is Point(3,0)
The apple location is Point(2,0)
The apple location is Point(2,0)
The apple location is Point(2,0)
The apple location is Point(2,0)
The apple location is Point(2,0)
The apple location is Point(2,0)
The apple location is Point(2,0)
The apple location is Point(2,0)
The apple location is Point(2,0)
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
